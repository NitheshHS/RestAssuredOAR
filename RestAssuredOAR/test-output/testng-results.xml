<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="6" total="10" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="5085" started-at="2020-12-09T15:37:43 IST" finished-at="2020-12-09T15:37:48 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="5085" started-at="2020-12-09T15:37:43 IST" finished-at="2020-12-09T15:37:48 IST">
      <class name="com.RMGYantra.test.AddSingleProjectWithCreated">
        <test-method status="PASS" signature="configBS()[pri:0, instance:com.RMGYantra.test.AddSingleProjectWithCreated@4493d195]" name="configBS" is-config="true" duration-ms="2936" started-at="2020-12-09T15:37:40 IST" finished-at="2020-12-09T15:37:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method status="PASS" signature="setUP()[pri:0, instance:com.RMGYantra.test.AddSingleProjectWithCreated@4493d195]" name="setUP" is-config="true" duration-ms="1" started-at="2020-12-09T15:37:43 IST" finished-at="2020-12-09T15:37:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="addSingleProjectWithCreatedTest()[pri:0, instance:com.RMGYantra.test.AddSingleProjectWithCreated@4493d195]" name="addSingleProjectWithCreatedTest" duration-ms="4730" started-at="2020-12-09T15:37:43 IST" finished-at="2020-12-09T15:37:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSingleProjectWithCreatedTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.RMGYantra.test.AddSingleProjectWithCreated@4493d195]" name="tearDown" is-config="true" duration-ms="10" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addSingleProjectWithCreatedTest status=SUCCESS method=AddSingleProjectWithCreated.addSingleProjectWithCreatedTest()[pri:0, instance:com.RMGYantra.test.AddSingleProjectWithCreated@4493d195] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="configAS()[pri:0, instance:com.RMGYantra.test.AddSingleProjectWithCreated@4493d195]" name="configAS" is-config="true" duration-ms="1016" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- com.RMGYantra.test.AddSingleProjectWithCreated -->
      <class name="com.RMGYantra.test.AddprojectWithOnGoingStatus">
        <test-method status="PASS" signature="setUP()[pri:0, instance:com.RMGYantra.test.AddprojectWithOnGoingStatus@4232c52b]" name="setUP" is-config="true" duration-ms="7" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="addProjectWithOnGoingStatusTest()[pri:0, instance:com.RMGYantra.test.AddprojectWithOnGoingStatus@4232c52b]" name="addProjectWithOnGoingStatusTest" duration-ms="98" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProjectWithOnGoingStatusTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.RMGYantra.test.AddprojectWithOnGoingStatus@4232c52b]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProjectWithOnGoingStatusTest status=SUCCESS method=AddprojectWithOnGoingStatus.addProjectWithOnGoingStatusTest()[pri:0, instance:com.RMGYantra.test.AddprojectWithOnGoingStatus@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.RMGYantra.test.AddprojectWithOnGoingStatus -->
      <class name="com.RMGYantra.test.AddProjectInTextFormat">
        <test-method status="PASS" signature="setUP()[pri:0, instance:com.RMGYantra.test.AddProjectInTextFormat@2781e022]" name="setUP" is-config="true" duration-ms="1" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="addprojectInTextFormat()[pri:0, instance:com.RMGYantra.test.AddProjectInTextFormat@2781e022]" name="addprojectInTextFormat" duration-ms="60" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addprojectInTextFormat -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.RMGYantra.test.AddProjectInTextFormat@2781e022]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addprojectInTextFormat status=SUCCESS method=AddProjectInTextFormat.addprojectInTextFormat()[pri:0, instance:com.RMGYantra.test.AddProjectInTextFormat@2781e022] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.RMGYantra.test.AddProjectInTextFormat -->
      <class name="com.RMGYantra.test.AddprojectWithDuplicateId">
        <test-method status="FAIL" signature="addProjectWithDuplicateIDTest()[pri:0, instance:com.RMGYantra.test.AddprojectWithDuplicateId@57e1b0c]" name="addProjectWithDuplicateIDTest" duration-ms="84" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <502> but was <201>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <502> but was <201>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:636)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:122)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:130)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)
at com.RMGYantra.test.AddprojectWithDuplicateId.addProjectWithDuplicateIDTest(AddprojectWithDuplicateId.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProjectWithDuplicateIDTest -->
        <test-method status="PASS" signature="setUP()[pri:0, instance:com.RMGYantra.test.AddprojectWithDuplicateId@57e1b0c]" name="setUP" is-config="true" duration-ms="0" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.RMGYantra.test.AddprojectWithDuplicateId@57e1b0c]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-12-09T15:37:48 IST" finished-at="2020-12-09T15:37:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProjectWithDuplicateIDTest status=FAILURE method=AddprojectWithDuplicateId.addProjectWithDuplicateIDTest()[pri:0, instance:com.RMGYantra.test.AddprojectWithDuplicateId@57e1b0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.RMGYantra.test.AddprojectWithDuplicateId -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
